<?xml version='1.0' encoding='UTF-8'?>
<document>
  <properties>
    <title>Open source full-text search server - Fess development overview</title>
    <author>Shinsuke Sugaya</author>
  </properties>
  <head>
    <meta content='Full-text search, open source, free software, OSS, development' name='keywords'/>
    <meta content='Possible to build open source easy-to full-text search server' name='Description'/>
  </head>
  <body>
    <section name='Overview'>
      <p>Summarizes the information needed to develop the Fess.</p>
    </section>
    <section name='Knowledge required'>
      <p>Fess is developed as an application to work in the environment of the Java 7 or more. The following knowledge becomes necessary.</p>
      <ul>
          <li>Java</li>
          <li>Seasar 2</li>
          <li>SAStruts (if you are developing a Web screen)</li>
          <li>DBFlute (if you are developing around the DB)</li>
          <li>SOLR (if you are developing around the search index)</li>
          <li>S2Robot (if you are developing around the crawler)</li>
      </ul>
      <p>When you develop using Eclipse and Maven in this scenario (to build to generate in the fess-server release of Ant becomes necessary). Also to develop and operate Fess server for download and you have installed. Dude install in advance is what you need.</p>
    </section>
    <section name='On the development of the screen around the Web'>
      <p>Summarizes how to develop management and search screens. Describes how to develop with Eclipse. You must keep your development on the Eclipse WTP, etc (you installed the J2EE Edition).</p>
      <ol>
        <li>Install Java, Eclipse, Maven 3.x, Fess and prepare. A zip file of the Fess &lt;FESS_HOME&gt;suppose you deploy directory. &lt;/FESS_HOME&gt;</li>
        <li>The source code of the Fess clone from github.
      <source><![CDATA[
git clone https://github.com/codelibs/fess.git
]]></source>
</li>
        <li>As a Maven project into the Eclipse.</li>
        <li>Display the servers view. If you don&apos;t see the Window &gt; Show View &gt; Other... In, display the dialog Server &gt; Servers, select OK button press concludes.</li>
        <li>Add a new server in the servers view. Tomcat v7.0 Server, select the server name is set to moderate, the Next button press concludes. The Add Configured: fess Finish button press concludes. So that server in the servers view is displayed, double click the display settings information (Overview).</li>
        <li>Select Use Tomcat Installation Server Locations.</li>
        <li>In the timeouts Start to 180 seconds, change the Stop to 60 seconds.</li>
        <li>Click the General Information Open Launch Configuration. Click the tag arguments. In the VM arguments &apos;-Dsolr.solr.home=&lt;FESS_HOME&gt;/solr-Dfess.log.file=&lt;FESS_HOME&gt;/logs/fess.out-Dsolr.log.file=&lt;FESS_HOME&gt;/logs/solr.log-Djava.awt.headless=true---Xmx1g-XX: UseTLAB - XX:-XX:MaxMetaspaceSize = DisableExplicitGC 128 m-XX: Compressedclssspcesize = 32 m - XX:-usegcoverhedlimit-XX: UseConcMarkSweepGC - XX: XX - XX: Cmsincrementlmode - XX: Cmsincrementlpcing - XX: Cmsincrementldutycyclemin = 0 - Cmsinititingoccupncyfrction = 75: Useprnewgc - XX: OptimizeStringConcat &apos; add the. &lt;FESS_HOME&gt;Will change depending on the environment. OK button press concludes. (If the Java 7-XX:MaxMetaspaceSize = 128 m-XX:CompressedClassSpaceSize = 32 m-XX:MaxPermSize = 128 m to replace)&lt;/FESS_HOME&gt; &lt;/FESS_HOME&gt; &lt;/FESS_HOME&gt; &lt;/FESS_HOME&gt;</li>
        <li>Boot the server from the servers view.</li>
      </ol>
      <p>If you want to develop a HOT deploy src/main/resources/env.txt change from the product the ct. You can change the source code, without having to restart the Tomcat (Fess).</p>
    </section>
    <section name='On the development of crawl around'>
      <p>The crawl process Tomcat (Fess) starts a process. If you want to pursue in the debugger, such as to register as for debugging Java applications on Eclipse.</p>
      <ol>
        <li>Register as a normal Java Application can be debugged in Eclipse. main function will be to jp.sf.fess.exec.Crawler.</li>
        <li>In settings 1, argument settings, first, passes a session ID-sessionId 20100101000000 to appropriate program settings. Expand the contents of the Fess bin/setenv.sh to the VM Settings and register.</li>
        <li>Add /fess/src/main/webapp/WEB-INF/cmd and geronimo_servlet_9.4_spec-1.0.jar in the classpath setting.</li>
        <li>The run.</li>
      </ol>
    </section>
    <section name='About creating a distribution of Fess'>
      <p>Distribution of Fess is included in Tomcat war file of the Fess and Solr. Build the distribution of Fess in SVN fess-server. In order to build Ant becomes necessary.</p>
      <source><![CDATA[
$ git clone https://github.com/codelibs/fess-server.git
$ cd fess-server
$ ant clean
$ ant
]]></source>
    </section>
    <section name='Reference material'>
      <ul>
        <li><a href='http://www.amazon.co.jp/Seasar-%E5%BE%B9%E5%BA%95%E5%85%A5%E9%96%80-SAStruts-S2JDBC-%E5%AF%BE%E5%BF%9C/dp/4798121509'>Seasar 2 thorough introduction to SAStruts/S2JDBC support</a> (For Seasar2, SAStruts will be helpful. Not available as S2JDBC so that such sides as required)</li>
        <li><a href='http://dbflute.sandbox.seasar.org/'>DBFlute</a></li>
        <li><a href='http://s2robot.sandbox.seasar.org/ja/'>S2Robot</a></li>
        <li><a href='http://lucene.apache.org/solr/'>SOLR</a></li>
      </ul>
    </section>
  </body>
</document>
