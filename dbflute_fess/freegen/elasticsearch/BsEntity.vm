package ${request.package}.bsentity;

import java.util.HashMap;
import java.util.Map;

import ${request.package}.bsentity.dbmeta.${table.camelizedName}Dbm;
#if ($table.hasRefColumn)
import ${request.package}.exentity.*;
#end

/**
 * ${table.comment}
 * @author FreeGen
 */
public class Bs${table.camelizedName} extends AbstractEntity {

    private static final long serialVersionUID = 1L;

    @Override
    public ${table.camelizedName}Dbm asDBMeta() {
        return ${table.camelizedName}Dbm.getInstance();
    }

    @Override
    public String asTableDbName() {
        return "${table.name}";
    }

    // ===================================================================================
    //                                                                           Attribute
    //                                                                           =========
#foreach ($column in $table.columnList)
#if ($column.isNormalColumn)
#set ($javaNative = ${column.type})
#elseif ($column.isRefColumn)
#set ($javaNative = ${column.camelizedName})
#end
    /** ${column.name} */
    protected ${javaNative} ${column.uncapCamelName};

#end
    // [Referrers] *comment only
#foreach ($referrer in $table.referrerList)
    // o ${referrer.name}
#end

    // ===================================================================================
    //                                                                            Accessor
    //                                                                            ========
#foreach ($column in $table.columnList)
#if ($column.isNormalColumn)
#set ($javaNative = ${column.type})
#elseif ($column.isRefColumn)
#set ($javaNative = ${column.camelizedName})
#end
    public ${javaNative} get${column.capCamelName}() {
        return ${column.uncapCamelName};
    }

    public void set${column.capCamelName}(${javaNative} value) {
        ${column.uncapCamelName} = value;
    }

#end

    @Override
    public Map<String, Object> toSource() {
        Map<String, Object> sourceMap = new HashMap<>();
#foreach ($column in $table.columnList)
#if ($column.isNormalColumn)
        if (${column.uncapCamelName} != null) {
            sourceMap.put("${column.name}", ${column.uncapCamelName});
        }
#end
#end
        return sourceMap;
    }
}
